{"version":3,"file":"createInstantSearchComponent.js","sources":["../../../src/util/createInstantSearchComponent.js"],"sourcesContent":["import { createSuitMixin } from '../mixins/suit';\nimport { version } from '../../package.json'; // rollup does pick only what needed from json\nimport { _objectSpread } from './polyfills';\nimport Vue from 'vue';\n\nexport const createInstantSearchComponent = component =>\n  _objectSpread(\n    {\n      mixins: [createSuitMixin({ name: 'InstantSearch' })],\n      provide() {\n        return {\n          $_ais_instantSearchInstance: this.instantSearchInstance,\n        };\n      },\n      watch: {\n        searchClient(searchClient) {\n          this.instantSearchInstance.helper.setClient(searchClient).search();\n        },\n        indexName(indexName) {\n          this.instantSearchInstance.helper.setIndex(indexName).search();\n        },\n        stalledSearchDelay(stalledSearchDelay) {\n          // private InstantSearch.js API:\n          this.instantSearchInstance._stalledSearchDelay = stalledSearchDelay;\n        },\n        routing() {\n          throw new Error(\n            'routing configuration can not be changed dynamically at this point.' +\n              '\\n\\n' +\n              'Please open a new issue: https://github.com/algolia/vue-instantsearch/issues/new?template=feature.md'\n          );\n        },\n        searchFunction(searchFunction) {\n          // private InstantSearch.js API:\n          this.instantSearchInstance._searchFunction = searchFunction;\n        },\n      },\n      created() {\n        const searchClient = this.instantSearchInstance.client;\n        if (typeof searchClient.addAlgoliaAgent === 'function') {\n          searchClient.addAlgoliaAgent(`Vue (${Vue.version})`);\n          searchClient.addAlgoliaAgent(`Vue InstantSearch (${version})`);\n        }\n      },\n      mounted() {\n        // from the documentation: https://vuejs.org/v2/api/#mounted\n        // \"Note that mounted does not guarantee that all child components have also been mounted. If you want to\n        // wait until the entire view has been rendered, you can use vm.$nextTick inside of mounted\"\n        this.$nextTick(() => {\n          if (!this.instantSearchInstance.started) {\n            this.instantSearchInstance.start();\n          }\n        });\n      },\n      beforeDestroy() {\n        if (this.instantSearchInstance.started) {\n          this.instantSearchInstance.dispose();\n        }\n\n        // a hydrated instance will no longer be hydrated once disposed, and starts from scratch\n        this.instantSearchInstance.__initialSearchResults = undefined;\n      },\n    },\n    component\n  );\n"],"names":["createInstantSearchComponent","component","_objectSpread","mixins","createSuitMixin","name","provide","$_ais_instantSearchInstance","this","instantSearchInstance","watch","searchClient","helper","setClient","search","indexName","setIndex","stalledSearchDelay","_stalledSearchDelay","routing","Error","searchFunction","_searchFunction","created","const","client","addAlgoliaAgent","Vue","version","mounted","$nextTick","started","start","beforeDestroy","dispose","__initialSearchResults","undefined"],"mappings":"sKAKY,IAACA,WAA+BC,UAC1CC,EACE,CACEC,OAAQ,CAACC,EAAgB,CAAEC,KAAM,mBACjCC,mBACE,MAAO,CACLC,4BAA6BC,KAAKC,wBAGtCC,MAAO,CACLC,sBAAaA,GACXH,KAAKC,sBAAsBG,OAAOC,UAAUF,GAAcG,UAE5DC,mBAAUA,GACRP,KAAKC,sBAAsBG,OAAOI,SAASD,GAAWD,UAExDG,4BAAmBA,GAEjBT,KAAKC,sBAAsBS,oBAAsBD,GAEnDE,mBACE,MAAM,IAAIC,MACR,gLAKJC,wBAAeA,GAEbb,KAAKC,sBAAsBa,gBAAkBD,IAGjDE,mBACEC,IAAMb,EAAeH,KAAKC,sBAAsBgB,OACJ,mBAAjCd,EAAae,kBACtBf,EAAae,wBAAwBC,eACrChB,EAAae,sCAAsCE,SAGvDC,8BAIErB,KAAKsB,qBACEtB,EAAKC,sBAAsBsB,SAC9BvB,EAAKC,sBAAsBuB,WAIjCC,yBACMzB,KAAKC,sBAAsBsB,SAC7BvB,KAAKC,sBAAsByB,UAI7B1B,KAAKC,sBAAsB0B,4BAAyBC,IAGxDnC"}